{"version":3,"file":"static/js/203.22cde7bf.chunk.js","mappings":"sLAEaA,E,QAAaC,GAAAA,KAAH,6M,+ECCVC,GAAkBD,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAkB,CAC/C,sBAAuB,CACrBG,MAAO,SAET,+BAAgC,CAC9BC,kBAAmB,U,8ICgEvB,UA1DmB,WACjB,IAAMC,GAAaC,EAAAA,EAAAA,QAAO,MACpBC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACQ,YAAX,OAALH,QAAK,IAALA,OAAA,EAAAA,EAAOI,OAAqBC,EAAAA,OAAAA,QAAA,UAAkBL,EAAMM,SACrD,GAAE,CAACN,IAaJ,OACE,+BACE,UAAC,IAAD,CAAYO,IAAKX,EAAYY,SAbhB,SAAAC,GACfA,EAAEC,iBACF,IAFoB,EAEdC,EAAW,IAAIC,SAAShB,EAAWiB,SACrCC,EAAc,CAAC,EAHC,UAIOH,GAJP,IAIpB,2BAAqC,CAAC,IAAD,qBAAzBI,EAAyB,KAApBC,EAAoB,KACnCF,EAAYC,GAAOC,CACpB,CANmB,+BAOpBlB,GAASmB,EAAAA,EAAAA,IAAOH,IAChBlB,EAAWiB,QAAQK,OACpB,EAIG,WACE,SAAC,IAAD,CACEC,MAAM,OACNC,QAAQ,SACRC,KAAK,QACLjB,KAAK,OACLkB,KAAK,OAELC,UAAQ,KAEV,SAAC,IAAD,CACEJ,MAAM,QACNC,QAAQ,SACRC,KAAK,QACLjB,KAAK,QACLkB,KAAK,QACLE,QAAQ,2CACRD,UAAQ,KAEV,SAAC,IAAD,CACEE,GAAG,eACHN,MAAM,WACNC,QAAQ,SACRC,KAAK,QACLjB,KAAK,WACLkB,KAAK,WACLC,UAAQ,KAEV,SAAC,IAAD,CAAWnB,KAAK,SAAhB,UACE,4CAKT,C,oECrEc,SAASsB,EAA2BC,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAClE,IAAKE,EAAI,CACP,GAAIG,MAAMC,QAAQN,KAAOE,GAAK,OAA2BF,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEO,OAAqB,CAC/GL,IAAIF,EAAIE,GACZ,IAAIM,EAAI,EACJC,EAAI,WAAc,EACtB,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKR,EAAEO,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACNvB,MAAOW,EAAEQ,KAEb,EACA1B,EAAG,SAAW+B,GACZ,MAAMA,CACR,EACAC,EAAGL,EAEP,CACA,MAAM,IAAIM,UAAU,wIACtB,CACA,IAEEC,EAFEC,GAAmB,EACrBC,GAAS,EAEX,MAAO,CACLR,EAAG,WACDR,EAAKA,EAAGiB,KAAKnB,EACf,EACAW,EAAG,WACD,IAAIS,EAAOlB,EAAGmB,OAEd,OADAJ,EAAmBG,EAAKR,KACjBQ,CACT,EACAtC,EAAG,SAAWwC,GACZJ,GAAS,EACTF,EAAMM,CACR,EACAR,EAAG,WACD,IACOG,GAAoC,MAAhBf,EAAW,QAAWA,EAAW,QAG5D,CAFE,QACA,GAAIgB,EAAQ,MAAMF,CACpB,CACF,EAEJ,C","sources":["components/Common/StyledForm.styled.jsx","components/Common/StyledTextField.styled.jsx","components/SignupForm/SignupForm.jsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  width: 250px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  button {\n    align-self: flex-start;\n  }\n\n  input {\n    margin-top: 6px;\n    width: 100%;\n  }\n`;\n","import { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\n\nexport const StyledTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: 'white',\n  },\n  '& .MuiFilledInput-root:after': {\n    borderBottomColor: 'white',\n  },\n});\n","// react\nimport { useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// libraries\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// redux-components\nimport { signUp } from 'redux/auth/authOperations';\nimport { selectAuthError } from 'redux/auth/authSelectors';\n// components\nimport { StyledForm } from '../Common/StyledForm.styled';\nimport { CustomBtn } from '../Common/CustomBtn.styled';\nimport { StyledTextField } from '../Common/StyledTextField.styled';\n\n//\nconst SignupForm = () => {\n  const signUpForm = useRef(null);\n  const dispatch = useDispatch();\n  const error = useSelector(selectAuthError);\n\n  useEffect(() => {\n    error?.type === 'signUp' && Notify.failure(`${error.message}`);\n  }, [error]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData(signUpForm.current);\n    let newUserInfo = {};\n    for (const [key, value] of formData) {\n      newUserInfo[key] = value;\n    }\n    dispatch(signUp(newUserInfo));\n    signUpForm.current.reset();\n  };\n\n  return (\n    <>\n      <StyledForm ref={signUpForm} onSubmit={onSubmit}>\n        <StyledTextField\n          label=\"Name\"\n          variant=\"filled\"\n          size=\"small\"\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n        />\n        <StyledTextField\n          label=\"Email\"\n          variant=\"filled\"\n          size=\"small\"\n          type=\"email\"\n          name=\"email\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          required\n        />\n        <StyledTextField\n          id=\"filled-basic\"\n          label=\"Password\"\n          variant=\"filled\"\n          size=\"small\"\n          type=\"password\"\n          name=\"password\"\n          required\n        />\n        <CustomBtn type=\"submit\">\n          <span>Sign up</span>\n        </CustomBtn>\n      </StyledForm>\n    </>\n  );\n};\n\nexport default SignupForm;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["StyledForm","styled","StyledTextField","TextField","color","borderBottomColor","signUpForm","useRef","dispatch","useDispatch","error","useSelector","selectAuthError","useEffect","type","Notify","message","ref","onSubmit","e","preventDefault","formData","FormData","current","newUserInfo","key","value","signUp","reset","label","variant","size","name","required","pattern","id","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}