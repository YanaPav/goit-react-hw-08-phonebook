{"version":3,"file":"static/js/616.1a229225.chunk.js","mappings":"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","sources":["components/Common/StyledForm.styled.jsx","components/Common/StyledTextField.styled.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","redux/filter/filterSelectors.js","components/EditForm/EditForm.styled.jsx","../node_modules/@mui/material/esm/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/esm/CircularProgress/CircularProgress.js","components/Common/CircularLoader.styled.jsx","components/EditForm/EditForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","../node_modules/@mui/icons-material/Clear.js","../node_modules/@mui/icons-material/Done.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  width: 250px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  button {\n    align-self: flex-start;\n  }\n\n  input {\n    margin-top: 6px;\n    width: 100%;\n  }\n`;\n","import { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\n\nexport const StyledTextField = styled(TextField)`\n  & label.Mui-focused {\n    color: white;\n  }\n\n  & .MuiFilledInput-root:after {\n    border-bottom-color: white;\n  }\n\n  input:-webkit-autofill {\n    -webkit-box-shadow: inset 0 0 0 50px #8e8890;\n    box-shadow: inset 0 0 0 50px #8e8890;\n    -webkit-text-fill-color: black;\n  }\n`;\n","export const selectContacts = ({ contacts }) => contacts.items\nexport const selectLoading = ({ contacts }) => contacts.loading\nexport const selectContactsError = ({ contacts }) => contacts.error\n\n","// react\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// libraries\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// redux-components\nimport { add } from 'redux/contacts/contactsOperations';\nimport {\n  selectContacts,\n  selectLoading,\n  selectContactsError,\n} from 'redux/contacts/contactsSelectors';\n// components\nimport { StyledForm } from '../Common/StyledForm.styled';\nimport { CustomBtn } from '../Common/CustomBtn.styled';\nimport { StyledTextField } from '../Common/StyledTextField.styled';\n\n//\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectContactsError);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const namePattern =\n    /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\n  const isDuplicate = name => {\n    const result = contacts?.find(\n      contactItem => contactItem.name?.toLowerCase() === name.toLowerCase()\n    );\n    return result;\n  };\n\n  useEffect(() => {\n    error?.type === 'add' && Notify.failure(`${error.message}`);\n  }, [error]);\n\n  const addContactToStore = contactObject => {\n    if (isDuplicate(contactObject.name)) {\n      Notify.warning(`${contactObject.name} is alredy in contacts`);\n      return;\n    }\n\n    dispatch(add(contactObject));\n    resetState();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contactObj = {\n      name,\n      number,\n    };\n\n    addContactToStore(contactObj);\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledTextField\n        id=\"contactFormName\"\n        label=\"Name\"\n        variant=\"filled\"\n        type=\"text\"\n        name=\"name\"\n        size=\"small\"\n        pattern={namePattern}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChange}\n      />\n\n      <StyledTextField\n        id=\"contactFormNumber\"\n        label=\"Number\"\n        variant=\"filled\"\n        name=\"number\"\n        size=\"small\"\n        inputProps={{\n          // pattern: /\\+\\d{1,9}/,\n          title:\n            'number  must be digits and can contain spaces, dashes, parentheses and can start with +',\n        }}\n        required\n        value={number}\n        onChange={handleChange}\n      />\n\n      <CustomBtn type=\"submit\" disabled={isLoading === 'add'}>\n        <span>{isLoading === 'add' ? 'Adding...' : 'Add contact'}</span>\n      </CustomBtn>\n    </StyledForm>\n  );\n};\n","export const selectFilter = (state) => state.filter\n","import styled from 'styled-components';\n// libraries\nimport ClearIcon from '@mui/icons-material/Clear';\nimport DoneIcon from '@mui/icons-material/Done';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nexport const MobileInputsWrap = styled.div`\n  .MuiFormControl-root {\n    display: block;\n  }\n  @media screen and (min-width: 670px) {\n    display: flex;\n    gap: 10px;\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n    color: transparent;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n  }\n`;\n\nexport const DeleteIcon = styled(ClearIcon)`\n  color: #b13232;\n`;\n\nexport const EditIcon = styled(DoneIcon)`\n  color: #1a450c;\n`;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import styled from 'styled-components';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nexport const CircularLoader = styled(CircularProgress)`\n  &.MuiCircularProgress-root {\n    color: white;\n  }\n`;\n","// react\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n// libraries\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n// redux-components\nimport {\n  selectContacts,\n  selectLoading,\n  selectContactsError,\n} from 'redux/contacts/contactsSelectors';\nimport { edit } from 'redux/contacts/contactsOperations';\n// components\nimport {\n  StyledForm,\n  EditIcon,\n  DeleteIcon,\n  ButtonWrap,\n  MobileInputsWrap,\n} from './EditForm.styled';\nimport { StyledTextField } from '../Common/StyledTextField.styled';\nimport { CircularLoader } from '../Common/CircularLoader.styled';\n\n//\nexport const EditForm = ({ id, name, number, closeEditForm }) => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectContactsError);\n  const dispatch = useDispatch();\n  const [newName, setNewName] = useState(name);\n  const [newNumber, setNewNumber] = useState(number);\n\n  const editFormBtn = document.getElementById(`editFormBtn${id}`);\n  const editFormBtnText = document.getElementById(`editFormBtnText${id}`);\n\n  useEffect(() => {\n    error?.type === 'edit' && Notify.failure(`${error.message}`);\n  }, [error]);\n\n  useEffect(() => {\n    window.addEventListener('click', editFormClickHandler);\n\n    const editFormName = document.getElementById(`editFormName${id}`);\n    const editFormNumber = document.getElementById(`editFormNumber${id}`);\n    const closeEditFormBtn = document.getElementById(`closeEditFormBtn${id}`);\n    const submitEditFormBtn = document.getElementById(`submitEditFormBtn${id}`);\n    const editFormCloseIcon = document.getElementById(`editFormCloseIcon${id}`);\n    const editFormSubmitIcon = document.getElementById(\n      `editFormSubmitIcon${id}`\n    );\n\n    function editFormClickHandler({ target }) {\n      const isClickOutEditForm =\n        target !== editFormName &&\n        target !== editFormNumber &&\n        target !== closeEditFormBtn &&\n        target !== submitEditFormBtn &&\n        target !== editFormBtn &&\n        target !== editFormBtnText &&\n        target !== editFormCloseIcon &&\n        target !== editFormSubmitIcon &&\n        target !== editFormSubmitIcon.children[0];\n      // остання умова - обробка бага при натисканні на path елемента svg\n\n      if (isClickOutEditForm) closeEditForm();\n    }\n\n    return () => window.removeEventListener('click', editFormClickHandler);\n  }, [closeEditForm, editFormBtn, editFormBtnText, id]);\n\n  const isDuplicate = newName => {\n    const result = contacts?.find(\n      contactItem => contactItem.name.toLowerCase() === newName.toLowerCase()\n    );\n    return result;\n  };\n\n  const addContactToStore = async contactObject => {\n    if (name === newName && number === newNumber) {\n      closeEditForm();\n      return;\n    }\n    if (isDuplicate(contactObject.name) && number === newNumber) {\n      Notify.warning(`${contactObject.name} is alredy in contacts`);\n      return;\n    }\n\n    const result = await dispatch(edit({ id: id, body: contactObject }));\n\n    if (!result.error) closeEditForm();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    if (name === 'name') setNewName(value);\n    if (name === 'number') setNewNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contactObj = {\n      name: newName,\n      number: newNumber,\n    };\n\n    addContactToStore(contactObj);\n  };\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit}>\n        <AccountCircleIcon />\n        <MobileInputsWrap>\n          <StyledTextField\n            id={`editFormName${id}`}\n            variant=\"filled\"\n            size=\"small\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={newName}\n            onChange={handleChange}\n          />\n\n          <StyledTextField\n            id={`editFormNumber${id}`}\n            variant=\"filled\"\n            size=\"small\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={newNumber}\n            onChange={handleChange}\n          />\n        </MobileInputsWrap>\n        {isLoading === 'edit' ? (\n          <CircularLoader />\n        ) : (\n          <ButtonWrap>\n            <button\n              id={`closeEditFormBtn${id}`}\n              type=\"button\"\n              disabled={isLoading === 'edit'}\n              onClick={closeEditForm}\n            >\n              <DeleteIcon id={`editFormCloseIcon${id}`} />\n            </button>\n            <button\n              id={`submitEditFormBtn${id}`}\n              type=\"submit\"\n              disabled={isLoading === 'edit'}\n            >\n              <EditIcon id={`editFormSubmitIcon${id}`} />\n            </button>\n          </ButtonWrap>\n        )}\n      </StyledForm>\n    </>\n  );\n};\n\nEditForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  closeEditForm: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledItem = styled.li`\n  align-items: flex-start;\n  display: flex;\n  gap: 8px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin: 0;\n  }\n`;\n\nexport const StyledBtn = styled.button`\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transform: scale(1);\n  transition: transform 250ms linear;\n\n  &:hover svg,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  margin-top: 4px;\n  display: flex;\n  gap: 8px;\n`;\n","// react\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n// libraries\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n// redux-components\nimport {\n  selectLoading,\n  selectContactsError,\n} from 'redux/contacts/contactsSelectors';\nimport { remove } from 'redux/contacts/contactsOperations';\n// components\nimport { CustomBtn } from '../Common/CustomBtn.styled';\nimport { EditForm } from '../EditForm/EditForm';\nimport { StyledItem, ButtonWrap } from './ContactItem.styled';\n\n//\nexport const ContactItem = ({ name, number, id }) => {\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectContactsError);\n  const dispatch = useDispatch();\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    if (error?.id === id) Notify.failure(error.message);\n  }, [error, id]);\n\n  return (\n    <StyledItem>\n      {!isEditing ? (\n        <>\n          <AccountCircleIcon />\n          <div>\n            {name}: {number}\n            <ButtonWrap>\n              <CustomBtn\n                id={`editFormBtn${id}`}\n                type=\"button\"\n                disabled={isLoading === id}\n                onClick={() => setIsEditing(true)}\n              >\n                <span id={`editFormBtnText${id}`}>Edit</span>\n              </CustomBtn>\n              <CustomBtn\n                id=\"deleteBtn\"\n                type=\"button\"\n                disabled={isLoading === id}\n                onClick={() => dispatch(remove(id))}\n              >\n                {isLoading === id ? (\n                  <span>Deleting...</span>\n                ) : (\n                  <span>Delete</span>\n                )}\n              </CustomBtn>\n            </ButtonWrap>\n          </div>\n        </>\n      ) : (\n        <EditForm\n          id={id}\n          name={name}\n          number={number}\n          closeEditForm={() => setIsEditing(false)}\n        />\n      )}\n    </StyledItem>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  padding-left: 0;\n  list-style: none;\n`;\n","// react\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// redux-components\nimport { fetch } from 'redux/contacts/contactsOperations';\nimport { selectFilter } from 'redux/filter/filterSelectors';\nimport {\n  selectContacts,\n  selectLoading,\n  selectContactsError,\n} from 'redux/contacts/contactsSelectors';\n// components\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { StyledList } from './ContactList.styled';\nimport { CircularLoader } from '../Common/CircularLoader.styled';\n\n//\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectContactsError);\n\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetch());\n  }, [dispatch]);\n\n  const filtredContacts = contacts?.filter(({ name }) =>\n    name?.toLowerCase().includes(filterValue?.toLowerCase())\n  );\n\n  return (\n    <>\n      {error?.type === 'fetch' && <div>{error.message}</div>}\n      {isLoading === 'fetch' && <CircularLoader />}\n      {contacts && (\n        <StyledList>\n          {filtredContacts?.map(({ name, number, id }) => {\n            return <ContactItem key={id} name={name} number={number} id={id} />;\n          })}\n        </StyledList>\n      )}\n    </>\n  );\n};\n","// react\nimport { useSelector, useDispatch } from 'react-redux';\n// redux-components\nimport { addFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/filterSelectors';\n// components\nimport { StyledForm } from '../Common/StyledForm.styled';\nimport { StyledTextField } from '../Common/StyledTextField.styled';\n\n//\nexport const Filter = () => {\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handlerFilterChange = e => {\n    dispatch(addFilter(e.currentTarget.value));\n  };\n\n  return (\n    <StyledForm>\n      <StyledTextField\n        id=\"filterInput\"\n        label=\"Find contact by name\"\n        variant=\"filled\"\n        type=\"text\"\n        name=\"filter\"\n        size=\"small\"\n        value={filterValue}\n        onChange={handlerFilterChange}\n      />\n    </StyledForm>\n  );\n};\n","// react\nimport { useSelector } from 'react-redux';\n// redux-components\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n// components\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\n//\nconst ContactsPage = () => {\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <>\n      <h1>Add new contact</h1>\n      <ContactForm />\n\n      {contacts?.length > 0 && (\n        <>\n          <h2>Contacts</h2>\n          <Filter />\n        </>\n      )}\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;"],"names":["StyledForm","styled","StyledTextField","TextField","selectContacts","contacts","items","selectLoading","loading","selectContactsError","error","ContactForm","useSelector","isLoading","dispatch","useDispatch","useState","name","setName","number","setNumber","useEffect","type","Notify","message","addContactToStore","contactObject","find","contactItem","toLowerCase","isDuplicate","add","resetState","handleChange","e","target","value","onSubmit","preventDefault","id","label","variant","size","pattern","title","required","onChange","inputProps","disabled","selectFilter","state","filter","MobileInputsWrap","ButtonWrap","DeleteIcon","ClearIcon","EditIcon","DoneIcon","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","overridesResolver","props","styles","ownerState","root","capitalize","color","theme","_extends","display","transition","transitions","create","vars","palette","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","React","inProps","ref","useThemeProps","className","style","thickness","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","width","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","CircularLoader","CircularProgress","EditForm","closeEditForm","newName","setNewName","newNumber","setNewNumber","editFormBtn","document","getElementById","editFormBtnText","window","addEventListener","editFormClickHandler","editFormName","editFormNumber","closeEditFormBtn","submitEditFormBtn","editFormCloseIcon","editFormSubmitIcon","removeEventListener","edit","body","AccountCircle","onClick","StyledItem","ContactItem","isEditing","setIsEditing","remove","StyledList","ContactList","filterValue","fetch","filtredContacts","includes","map","Filter","addFilter","currentTarget","length","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}